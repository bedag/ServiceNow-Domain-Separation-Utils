<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_script">
    <sys_ui_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <description/>
        <global>false</global>
        <ignore_in_now_experience>false</ignore_in_now_experience>
        <name>x_376096_dsutils.slush_bucket</name>
        <script><![CDATA[var x_376096_dsutils = x_376096_dsutils || {};
x_376096_dsutils.slush_bucket = (function() {
	"use strict";

	/* global setTimeout */
	/* eslint no-undef: "error" */
	if (x_376096_dsutils.slush_bucket) {
		return x_376096_dsutils.slush_bucket;
	}
	
	x_376096_dsutils.loader.get('window', function ($window) {
		const ui = $window.GlideUI.get();
		// Prevent "Wrong Scope" message from clearing the Domain Separation warning
		ui.clearOutputMessages = _ => {};
		
		const form = $window.document.querySelector('form[name=editPage]');
		const type = form && form.querySelector('input[name=sysparm_form]');
		const view = form && form.querySelector('select[name=sysparm_view]');
		const id = form && form.querySelector('input[name=sys_target]');
		let checker;
		if (type && type.value == 'section') {
			// id is the Sys Id of the section
			checker = checkSection;
		} else if (type && type.value == 'related_list') {
			// id is the table for which the related view is configured
			checker = testRelatedList;
		}
		
		if (checker) {
			checker($window, ui, id.value, view.value);
			
			const ootbChangeSection = $window.g_view.changeSection;
			let viewChanged = false;
			$window.g_view.changeSection = function () {
				checker($window, ui, id.value, view.value);
				ootbChangeSection.apply($window.g_view, arguments);
			};
		}
		
	});
	
	function checkSection($window, ui, sectionSysId) {
		const ga = new $window.GlideAjax('DSUtilClient').setScope('x_376096_dsutils');
		ga.addParam('sysparm_name', 'testUISection');
		ga.addParam('ui_section', sectionSysId);
		ga.getXMLAnswer(function (result) {
			result = JSON.parse(result);
			if (result.status == 'error' && result.message) {
				const alertMsg = {
					msg: result.message,
					id: 'dsutils_domain_msg',
					type: 'warning'
				};

				ui.addOutputMessage(alertMsg);
			}
		});
	}
	
	function testRelatedList($window, ui, table, view) {
		const ga = new $window.GlideAjax('DSUtilClient').setScope('x_376096_dsutils');
		ga.addParam('sysparm_name', 'testRelatedList');
		ga.addParam('table', table);
		ga.addParam('view', view);
		ga.getXMLAnswer(function (result) {
			result = JSON.parse(result);
			if (result.status == 'error' && result.message) {
				const alertMsg = {
					msg: result.message,
					id: 'dsutils_domain_msg',
					type: 'warning'
				};

				ui.addOutputMessage(alertMsg);
			}
		});
	}

	return {
		type: 'slush_bucket'
	};
})();
]]></script>
        <script_name>slush_bucket</script_name>
        <sys_class_name>sys_ui_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-11-12 10:31:37</sys_created_on>
        <sys_id>b167c0d097a235103c2d3f56f053af77</sys_id>
        <sys_mod_count>8</sys_mod_count>
        <sys_name>x_376096_dsutils.slush_bucket</sys_name>
        <sys_package display_value="Domain Separation Utils" source="x_376096_dsutils">c826c49c976235103c2d3f56f053af25</sys_package>
        <sys_policy/>
        <sys_scope display_value="Domain Separation Utils">c826c49c976235103c2d3f56f053af25</sys_scope>
        <sys_update_name>sys_ui_script_b167c0d097a235103c2d3f56f053af77</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-11-13 22:19:43</sys_updated_on>
        <ui_type>0</ui_type>
        <use_scoped_format>true</use_scoped_format>
    </sys_ui_script>
</record_update>
